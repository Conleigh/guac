#Declarative sentences
1 S1 S .
.005 S1 S ...
.05 S1 S !
.005 S1 it is not that S , but ...
1 S SNP VP #subject NP
1 SNP NP
.1 SNP sNP #NP specifically marked with subject, e.g., she
1 S SNP_pl VP_pl #subject NP
1 SNP_pl NP_pl
.1 SNP_pl sNP_pl #NP specifically marked with subject, e.g., they
1 S GP VP
1 ONP_all NP_all #object NP
.1 ONP_all oNP_all #NP specifically marked with object, e.g., her

#Interrogative sentences
0.3 S1 Q ?

#Imperative sentences
.1 S1 Imp !
.1 S1 Imp .

#Conjunctions, sentence-level
.05 S S , Conj S
.05 Q Q , Conj Q
.05 S S ; S
.001 S S : S
.001 S S : ONP_all


#TODO: for Conj and subConj, this method could be very recursive very fast...

#Subordinating conjunctions
.05 S S subConj S
.05 S subConj S , S

#TODO: either / or not working well yet...
.1 S1 EITHER Sbar .
.005 S1 EITHER Sbar !

# Either he is a monkey or she rides
5 Sbar S OR S

# Either he moves or she does - only for present-tense verbs.
1 Sbar SNP VP_Present OR Does_Phrase
1 Sbar SNP_pl VP_pl_Present OR Does_Phrase
# Does phrase, corresponds only to non-copular initial verb phrases
1 Does_Phrase SNP do_sing
.2 Does_Phrase SNP do_sing Neg
1 Does_Phrase SNP_pl do_pl
.2 Does_Phrase SNP_pl do_pl Neg

# Phrases involving copula can have a be-phrase instead of a second complete sentence
1 Sbar SNP VP_Cop OR Be_Phrase
1 Sbar SNP_pl VP_Cop_pl OR Be_Phrase
1 Be_Phrase SNP BE
1 Be_Phrase SNP_pl BE_pl
1 Be_Phrase SNP BE_p
1 Be_Phrase SNP_pl BE_pl_p
1 Be_Phrase	SNP Modal BE_inf
1 Be_Phrase SNP_pl Modal BE_inf
1 Be_Phrase	SNP Modal HAVE_inf BE_inf
1 Be_Phrase SNP_pl Modal HAVE_inf BE_inf
1 Be_Phrase SNP HAVE BE_pp
1 Be_Phrase SNP_pl HAVE_pl BE_pp

#TODO: "he neither ran nor did he ride"
#TODO: add sentence-level conjunction logic for Q
#TODO: add lists with conjunction for VP/NP-level, e.g. "he rode, ate, and jumped"
#TODO: "neither king rides"




###VERBS#############################################
# Need to reclassify - VP goes to copula, present, past, plural, etc. From there, can do a better sentence thing.
#Verb basics
.2 VP VP PP
.2 VP_pl VP_pl PP

#Verb Conjunctions
.1 VP VP conj VP
.1 VP_pl VP_pl conj VP_pl
#TODO: "he did not ride but ate"
#TODO: either/or neither/nor not working ...
#.05 VP EITHER VP OR VP
#.05 VP_pl EITHER VP_pl OR VP_pl
#.05 VP NEITHER VP NOR VP
#.05 VP_pl NEITHER VP_pl NOR VP_pl

#Adverbs
.3 VP VP Adv
.5 VP_pl VP_pl Adv
.3 VP Adv VP
.5 VP_pl Adv VP_pl
.3 VP VP Adv1
.5 VP_pl VP_pl Adv1

1 VP VP_Cop # Present, copula forms
1 VP_pl VP_Cop_pl

#Copula - pres sing #is yellow, is PP
1 VP_Cop BE PP
1 VP_Cop BE Neg PP
1	VP_Cop BE AP
1 VP_Cop BE Neg AP
#Copula - pres pl
1	VP_Cop_pl BE_pl PP
1	VP_Cop_pl BE_pl Neg PP
1	VP_Cop_pl BE_pl AP
1	VP_Cop_pl BE_pl Neg AP
#Copula - past sing #was yellow, was PP
1	VP_Cop BE_p PP
1	VP_Cop BE_p Neg PP
1	VP_Cop BE_p AP
1	VP_Cop BE_p Neg AP
#Copula - past pl
1	VP_Cop_pl BE_pl_p PP
1	VP_Cop_pl BE_pl_p Neg PP
1	VP_Cop_pl BE_pl_p AP
1	VP_Cop_pl BE_pl_p Neg AP
#Copula - #might be yellow, might be PP
1 VP_Cop Modal BE_inf PP
1 VP_Cop Modal Neg BE_inf PP
1 VP_Cop Modal BE_inf AP
1 VP_Cop Modal Neg BE_inf AP
1 VP_Cop_pl Modal BE_inf PP
1 VP_Cop_pl Modal Neg BE_inf PP
1 VP_Cop_pl Modal BE_inf AP
1 VP_Cop_pl Modal Neg BE_inf AP
#Copula - #might have been
1 VP_Cop Modal HAVE_inf BE_pp PP
1 VP_Cop Modal Neg HAVE_inf BE_pp PP
1 VP_Cop Modal HAVE_inf BE_pp AP
1 VP_Cop Modal Neg HAVE_inf BE_pp AP
1 VP_Cop_pl Modal HAVE_inf BE_pp PP
1 VP_Cop_pl Modal Neg PHAVE_inf BE_pp P
1 VP_Cop_pl Modal HAVE_inf BE_pp AP
1 VP_Cop_pl Modal Neg HAVE_inf BE_pp AP

#Copula: is being yellow - pres
1 VP_Cop BE BE_cont AP #sing
1 VP_Cop BE Neg BE_cont AP #sing
1 VP_Cop_pl BE_pl BE_cont AP #pl
1 VP_Cop_pl BE_pl Neg BE_cont AP #pl
#was being yellow - past
1 VP_Cop BE_p BE_cont AP #sing
1 VP_Cop BE_p Neg BE_cont AP #sing
1 VP_Cop_pl BE_pl_p BE_cont AP #pl
1 VP_Cop_pl BE_pl_p Neg BE_cont AP #pl

#Copula: has been yellow
1 VP_Cop HAVE BE_pp AP #sing
1 VP_Cop HAVE Neg BE_pp AP #sing
1 VP_Cop_pl HAVE_pl BE_pp AP #pl
1 VP_Cop_pl HAVE_pl Neg BE_pp AP #pl

#Copula: has been being
1 VP_Cop HAVE BE_pp BE_cont AP #sing
1 VP_Cop HAVE Neg BE_pp BE_cont AP #sing
1 VP_Cop_pl HAVE_pl BE_pp BE_cont AP #pl
1 VP_Cop_pl HAVE_pl Neg BE_pp BE_cont AP #pl

# Expanding VP into VP_Present enables "either he knows or she does"
2 VP VP_Present
2 VP_pl VP_pl_Present

#Verbs - pres sing. #he drinks
1	VP_Present VerbT ONP_all
1	VP_Present VerbI
.3 VP_Present VerbC CC
#Verbs - pres pl
1	VP_pl_Present VerbT_pl ONP_all
1	VP_pl_Present VerbI_pl
.3 VP_pl_Present VerbC_pl CC

#Verbs - past sing. #he drank
1	VP VerbT_p ONP_all
1	VP VerbI_p
.3 VP VerbC_p CC
#Verbs - past pl.
1	VP_pl VerbT_pl_p ONP_all
1	VP_pl VerbI_pl_p
.3 VP_pl VerbC_pl_p CC


#Present continuous - sing. #is drinking
1	VP BE	GP #sing
1	VP BE Neg	GP #sing
1	VP_pl BE_pl	GP #pl
1	VP_pl BE_pl Neg	GP #pl
#Past continuous
1	VP BE_p	GP #sing
1	VP BE_p	Neg GP #sing
1	VP_pl BE_pl_p	GP #pl
1	VP_pl BE_pl_p	Neg GP #pl

#Present Simple Passive #is drunk (Note: only transitive)
1 VP BE VerbT_pp #sing
1 VP BE Neg VerbT_pp #sing
1 VP_pl BE_pl VerbT_pp #pl
1 VP_pl Neg BE_pl VerbT_pp #pl
#Past Simple Passive
1 VP BE_p VerbT_pp #sing
1 VP BE_p Neg VerbT_pp #sing
1 VP_pl BE_pl_p VerbT_pp #pl
1 VP_pl BE_pl_p Neg VerbT_pp #pl

#Present Continuous Passive #is being drunk (Note: only transitive.)
1 VP BE BE_cont VerbT_pp #sing
1 VP BE Neg BE_cont VerbT_pp #sing
1 VP_pl BE_pl BE_cont VerbT_pp #pl
1 VP_pl BE_pl Neg BE_cont VerbT_pp #pl
#Past Continuous Passive
1 VP BE_p BE_cont VerbT_pp #sing
1 VP BE_p Neg BE_cont VerbT_pp #sing
1 VP_pl BE_pl_p BE_cont VerbT_pp #pl
1 VP_pl BE_pl_p Neg BE_cont VerbT_pp #pl

#Present Perfect #has drunk
1 VP HAVE PPP #sing
1 VP HAVE Neg PPP #sing
1 VP_pl HAVE_pl PPP #pl
1 VP_pl HAVE_pl Neg PPP #pl
#Past Perfect #had drunk
1 VP HAVE_p PPP #sing
1 VP HAVE_p Neg PPP #sing
1 VP_pl HAVE_pl_p PPP #pl
1 VP_pl HAVE_pl_p Neg PPP #pl

#Present Perfect Passive #has been drunk (Note: only transitive)
1 VP HAVE BE_pp VerbT_pp #sing
1 VP HAVE Neg BE_pp VerbT_pp #sing
1 VP_pl HAVE_pl BE_pp VerbT_pp #pl
1 VP_pl HAVE_pl Neg BE_pp VerbT_pp #pl
#Past Perfect Passive #had been drunk
1 VP HAVE_p BE_pp VerbT_pp #sing
1 VP HAVE_p Neg BE_pp VerbT_pp #sing
1 VP_pl HAVE_pl_p BE_pp VerbT_pp #pl
1 VP_pl HAVE_pl_p Neg BE_pp VerbT_pp #pl

#Present Perfect Continuous #has been drinking
1	VP HAVE BE_pp	GP #sing
1	VP HAVE Neg BE_pp	GP #sing
1	VP_pl HAVE_pl BE_pp	GP #pl
1	VP_pl HAVE_pl Neg BE_pp	GP #pl
#Past Perfect Continuous #had been drinking
1	VP HAVE_p BE_pp	GP #sing
1	VP HAVE_p Neg BE_pp	GP #sing
1	VP_pl HAVE_pl_p BE_pp	GP #pl
1	VP_pl HAVE_pl_p Neg BE_pp	GP #pl

#Future (will) #will drink
#Future Possibility #might drink
#Present Modal #should drink
1 VP Modal VinfP #sing
1 VP Modal Neg VinfP #sing
1 VP_pl Modal VinfP #pl
1 VP_pl Modal Neg VinfP #pl

#Future (will) Passive #will be drunk (Note: only transitive)
1 VP Modal BE_inf VerbT_pp
1 VP Modal Neg BE_inf VerbT_pp
1 VP_pl Modal BE_inf VerbT_pp
1 VP_pl Modal Neg BE_inf VerbT_pp

#Future Continuous #will be drinking #Future Possible continuous
1 VP Modal BE_inf GP
1 VP Modal Neg BE_inf GP
1 VP_pl Modal BE_inf GP
1 VP_pl Modal Neg BE_inf GP

#Future Perfect #will have drunk
#Past Modal #should have drunk
#Past Unreal Conditional #would have drunk
1 VP Modal HAVE_inf PPP
1 VP Modal Neg HAVE_inf PPP
1 VP_pl Modal HAVE_inf PPP
1 VP_pl Modal Neg HAVE_inf PPP

#Unknown #should have been drinking
1 VP Modal HAVE_inf BE_pp GP
1 VP Modal Neg HAVE_inf BE_pp GP
1 VP_pl Modal HAVE_inf BE_pp GP
1 VP_pl Modal Neg HAVE_inf BE_pp GP

#Unknown #should have been drunk (Note: only transitive)
1 VP Modal HAVE_inf BE_pp VerbT_pp
1 VP Modal Neg HAVE_inf BE_pp VerbT_pp
1 VP_pl Modal HAVE_inf BE_pp VerbT_pp
1 VP_pl Modal Neg HAVE_inf BE_pp VerbT_pp

# Subjunctive tense #"he suggested that the castle be carried"
1 VP_subj BE_inf VerbT_pp
1 VP_subj Neg BE_inf VerbT_pp
1 VP_subj_pl BE_inf VerbT_pp
1 VP_subj_pl Neg BE_inf VerbT_pp

#All transitive verbs (sing) [for "he knows what they ride"]
1 VerbTALL BE
1 VerbTALL BE_p
1 VerbTALL Modal BE_inf
1 VerbTALL Modal HAVE_inf BE_pp
1 VerbTALL BE BE_cont
1 VerbTALL BE_p BE_cont
1 VerbTALL HAVE BE_pp
1 VerbTALL HAVE BE_pp BE_cont
1 VerbTALL VerbT
1 VerbTALL VerbT_p
1 VerbTALL BE	VerbT_G
1 VerbTALL BE_p	VerbT_G
1 VerbTALL HAVE VerbT_pp
1 VerbTALL HAVE_p VerbT_pp
1 VerbTALL HAVE BE_pp	VerbT_G
1 VerbTALL HAVE_p BE_pp	VerbT_G
1 VerbTALL Modal VinfT
1 VerbTALL Modal BE_inf VerbT_pp
1 VerbTALL Modal BE_inf VerbT_G
1 VerbTALL Modal HAVE_inf VerbT_pp
1 VerbTALL Modal HAVE_inf BE_pp VerbT_G

#All transitive verbs (plural)
1 VerbTALL_pl BE_pl
1 VerbTALL_pl BE_pl_p
1 VerbTALL_pl Modal BE_inf
1 VerbTALL_pl Modal HAVE_inf BE_pp
1 VerbTALL_pl BE_pl BE_cont
1 VerbTALL_pl BE_pl_p BE_cont
1 VerbTALL_pl HAVE_pl BE_pp
1 VerbTALL_pl HAVE_pl BE_pp BE_cont
1 VerbTALL_pl VerbT_pl
1 VerbTALL_pl VerbT_pl_p
1 VerbTALL_pl BE_pl	VerbT_G
1 VerbTALL_pl BE_pl_p
1 VerbTALL_pl HAVE_pl VerbT_pp
1 VerbTALL_pl HAVE_pl_p
1 VerbTALL_pl HAVE_pl BE_pp
1 VerbTALL_pl HAVE_pl_p BE_pp
1 VerbTALL_pl Modal VinfT
1 VerbTALL_pl Modal BE_inf VerbT_pp
1 VerbTALL_pl Modal BE_inf VerbT_G
1 VerbTALL_pl Modal HAVE_inf VerbT_pp
1 VerbTALL_pl Modal HAVE_inf BE_pp VerbT_G


#TODO: incorporate these conditional statements.
#TODO #Real Conditional #if he drinks wine, I will drive home
#TODO #Unreal Conditional #if he drank wine, I would drive home.
#TODO #Past Unreal Conditional #If he had drunk wine, I would have driven home.

#TODO: Negating sentences. ex: "he was not riding" (note: no "did" in Vocab, but there is a does)




###NOUNS#############################################
#Prepositional phrases
.2 SNP SNP PP
.2 SNP_pl SNP_pl PP
.2 ONP_all ONP_all PP
1	PP Prep ONP_all

#Group of NP and NP_pl
1 NP_all NP
1 NP_all NP_pl

#Noun conjunctions
#TODO: add possibility of pronouns "he and she rode"
.05 NP_pl NP_all conj NP_all
#TODO: either/or could use more work...
.05 NP EITHER NP_all OR NP #verb agrees with last subject
.05 NP_pl EITHER NP_all OR NP_pl
.05 NP NEITHER NP_all NOR NP #verb agrees with last subject
.05 NP_pl NEITHER NP_all NOR NP_pl


#Basic NP
1 NP Proper
1 NP Det Noun
#Basic NP plural
1 NP_pl Noun_pl
.2 NP_pl Det_pl Noun_pl
.2 NP_pl Proper_pl
#Numbers
.3 NP_pl Num Noun_pl
.1 NP_pl Num Proper_pl

#Basic Noun
2	Noun AP Noun
2	Noun_pl AP Noun_pl
2	Proper AP Proper
2	Proper_pl AP Proper_pl

#NP qualified with "that", e.g., "the castle that was his home"
#NP qualified with "who", e.g., "the castle that was his home"
.05 NP NP Comp1 VP
.05 NP_pl NP_pl Comp1 VP_pl

#Possessive pronouns e.g. "his"
.2 NP PRP_poss Noun
.2 NP_pl PRP_poss Noun_pl
#Possessive 's (singular only)
.2 NP NP POS NP
.2 NP_pl NP POS NP_pl

#Pronouns
#TODO: add logic to other parts of grammar so that things that follow agree with pl/sing , e.g. "he who was"
1 sNP PRP_subj
1 sNP_pl PRP_subj_pl
1 oNP_all oNP
1 oNP_all oNP_pl
1 oNP PRP_obj
1 oNP_pl PRP_obj_pl



###OTHER##############################################

#Adjective phrase
1 AP JJ
.1 AP Adv JJ

#Complementizer
1 CC Comp S
1 CC S #hidden "that"
1 CC Comp S_subj #subjunctive sentence #"he suggested that the castle be carried"
1 CC S_subj
1 S_subj SNP VP_subj
1 S_subj SNP_pl VP_subj_pl
.2 VP_subj VP_subj PP
.2 VP_subj_pl VP_subj_pl PP

#Gerund phrases
1 GP GP PP
1 GP VerbT_G ONP_all
1 GP VerbI_G
.2 GP VerbG_C CC

#Past participle phrases
1 PPP VerbT_pp ONP_all
1 PPP VerbI_pp
1 PPP VerbC_pp CC

#Infinitive verb phrase
1 VinfP VinfT ONP_all
1 VinfP VinfI
1 VinfP Vinf_C CC

#Nonrestrictive clause #"Arthur, (who is) sixty inches, ..."
#TODO: doesn't work for more than 1 NRC linked together (multiple commas) or end of sentence
#TODO: include pronouns (currently pronouns under sNP and oNP)
#TODO: need to allow "the castle that he rode (it)", VerbT without its object
.01 NP NP NRC
.01 NP_pl NP_pl NRC
.01 NRC , NP_all ,
.01 NRC , NP_all #TODO: TEMPORARY FIX for end of sentences
#TODO: add ",who is sixty inches,"

# #"he knows what they are covering"
# Need all transitive verb conjugations possible after but without their objects
1 ONP_all Wh_det SNP VerbTALL
1 ONP_all Wh_det SNP_pl VerbTALL_pl
.2 VerbTALL VerbTALL PP
.2 VerbTALL_pl VerbTALL_pl PP
#TODO: add possibility of Wh_det being the object of a PP; intransitive verb and then Prep without its object
#TODO: add possibility of "he knows what they are covering that existed before" (like "the castle that...")



###IMPERATIVE SENTENCES################################################
1 Imp do_imp VinfP
1 Imp VinfP
1 Imp do_imp Neg VinfP

###QUESTIONS################################################
#TODO: distinguish T from I verbs; "what do strangers migrate ? " is wrong
# "does her king suggest Uther Pendragon carry ?" is wrong
# should be able to produce: "was he suggesting that the castle be carried?"

 1 Q Q_do
 1 Q Q_wh
 1 Q Q_is
 1 Q Q_dyn

# Wh-questions pronouns
# What does Arthur eat ? who does Arthur eat?
 1 Q_wh Wh_pronouns Q_do_pronoun
 1 Q_do_pronoun do_sing Vinf_Cl_noarg
 1 Q_do_pronoun do_pl Vinf_Cl_pl_noarg

#Infinite clause where argument is implied ('What does Arthur eat ?', not 'What does arthur eat the bread ?')
 1 Vinf_Cl_noarg SNP VinfP_whQ
 1 Vinf_Cl_pl_noarg SNP_pl VinfP_whQ

#TODO: Are some of these verbs limited to certain prepositions? E.g. what does arthur drink on? what does arthur drink across? do they both work?
#Infinitive verb phrases for what/who questions that work with prepositions (who does arthur speak to? What does she ride at ? )
#i.e. the 'Arthur eat' in 'What does arthur eat? ', but not 'Arthur eat snakes'
5 VinfP_whQ Vinf_whQ
1 VinfP_whQ ride Prep
1 VinfP_whQ speak Prep #Does this work? What does Arthur speak at?
1 VinfP_whQ drink Prep
1 VinfP_whQ grow Prep
1 VinfP_whQ migrate to
1 VinfP_whQ migrate from


# Wh-questions adverbs (when/where/how/why)
# When does Arthur eat? Why does Arthur eat the horse?
 100 Q_wh Wh_adverbs Q_do
 1 Q_do do_sing Vinf_Cl #Do question: do horses eat ?
 1 Q_do do_pl Vinf_Cl_pl #Does question: Does Arthur eat ?

 #E.g. She carry / the snakes carry in 'why does she carry?' 'when do the snakes carry ?'
 1 Vinf_Cl SNP VinfI
 1 Vinf_Cl_pl SNP_pl VinfI
 #Infinitive clauses with an additional argument. 'Why does she carry the snake? '
 1 Vinf_Cl SNP VinfT ONP_all
 1 Vinf_Cl_pl SNP_pl VinfT ONP_all


#subjunctive questions: a special form of do-questions like 'Does arthur suggest she eat ?'
#TODO: do I need to split some of these up? It makes it much messier
1 Q_wh Wh_pronouns Q_subjunct
1 Q_wh Wh_adverbs Q_subjunct
1 Q_subjunct do_sing Vinf_Cl_subjunct
1 Q_subjunct do_pl Vinf_Cl_subjunct_pl

1 Vinf_Cl_subjunct SNP Vinf_subjunct SNP Vinf_whQ #..Arthur suggest she ride
1 Vinf_Cl_subjunct SNP Vinf_subjunct SNP_pl Vinf_whQ #..Arthur suggest the snakes ride
1 Vinf_Cl_subjunct SNP Vinf_subjunct SNP VinfT ONP_all #..Arthur suggest she eat the snakes
1 Vinf_Cl_subjunct SNP Vinf_subjunct SNP_pl VinfT ONP_all #..ARthur suggest the strangers eat the snakes

1 Vinf_Cl_subjunct_pl SNP_pl Vinf_subjunct SNP Vinf_whQ #..Arthur suggest she ride
1 Vinf_Cl_subjunct_pl SNP_pl Vinf_subjunct SNP_pl Vinf_whQ #..Arthur suggest the snakes ride
1 Vinf_Cl_subjunct_pl SNP_pl Vinf_subjunct SNP VinfT ONP_all #..Arthur suggest she eat the snakes
1 Vinf_Cl_subjunct_pl SNP_pl Vinf_subjunct SNP_pl VinfT ONP_all #..ARthur suggest the strangers eat the snakes


#Are/is questions
1 Q_is BE SNP GP
1 Q_is BE_pl SNP_pl GP
#1 Q_is SNP BE AP
#1 Q_is SNP_pl BE_pl AP

# Are you suggesting (subjunctive)
1 Q_is BE_pl SNP_pl GP_subjunct
1 Q_is BE SNP GP_subjunct

1 GP_subjunct VerbG_C SNP VinfT PP
1 GP_subjunct VerbG_C SNP VinfI

#'do you not ' type questions: Zoot will carry the snake, will she not?
# problem is that you need agreement in the nouns ('The strangers will carry the snake, will she not?' doesn't work)
# And also have an agreement in the modal ('Zoot can carry the snake, will she not?' doesn't seem grammatical)
# So it requires a lot of tokens to get right
# TODO : Do we need pronoun gender agreement? Can we say 'England can carry, can she not ?' 'Zoot can carry, can it now ?') Is that semantic or syntactic?
1 Q_dyn Q_dyn_can
1 Q_dyn Q_dyn_verb
1 Q_dyn Q_dyn_could
1 Q_dyn Q_dyn_should
1 Q_dyn Q_dyn_would
1 Q_dyn Q_dyn_will

#Zoot drinks the snake, does she not?
1 Q_dyn_verb SNP dyn_P_verb_sing
1 dyn_P_verb_sing VP_pres_sing , dyn_P2_verb_sing
1 dyn_P2_verb_sing does PRP_subj not
1 Q_dyn_verb SNP_pl dyn_P_verb_pl
1 dyn_P_verb_pl VP_pres_pl , dyn_P2_verb_pl
1 dyn_P2_verb_pl do PRP_subj_pl not

1 VP_pres_sing VerbI
1 VP_pres_sing VerbT_bar ONP_all
1 VP_pres_sing VerbI
1 VP_pres_sing VerbT ONP_all

1 VP_pres_pl VerbI_pl
1 VP_pres_pl VerbT_pl_bar ONP_all

#Zoot can eat the snake, can she not?
1 Q_dyn_can SNP dyn_P_can_sing
1 dyn_P_can_sing can VP_pres , dyn_P2_can_sing
1 VP_pres VinfP
1 dyn_P2_can_sing can PRP_subj not
1 Q_dyn_can SNP_pl dyn_P_can_pl
1 dyn_P_can_pl can VP_pres , dyn_P2_can_pl
1 VP_pres VinfP
1 dyn_P2_can_pl can PRP_subj_pl not

#Zoot could eat the snake, could she not?
1 Q_dyn_could SNP dyn_P_could_sing
1 dyn_P_could_sing could VP_pres , dyn_P2_could_sing
1 VP_pres VinfP
1 dyn_P2_could_sing could PRP_subj not
1 Q_dyn_could SNP_pl dyn_P_could_pl
1 dyn_P_could_pl could VP_pres , dyn_P2_could_pl
1 VP_pres VinfP
1 dyn_P2_could_pl could PRP_subj_pl not

#Zoot should eat the snake, should she not?
1 Q_dyn_should SNP dyn_P_should_sing
1 dyn_P_should_sing should VP_pres , dyn_P2_should_sing
1 VP_pres VinfP
1 dyn_P2_should_sing should PRP_subj not
1 Q_dyn_should SNP_pl dyn_P_should_pl
1 dyn_P_should_pl should VP_pres , dyn_P2_should_pl
1 VP_pres VinfP
1 dyn_P2_should_pl should PRP_subj_pl not

#Zoot would eat the snake, would she not?
1 Q_dyn_would SNP dyn_P_would_sing
1 dyn_P_would_sing would VP_pres , dyn_P2_would_sing
1 VP_pres VinfP
1 dyn_P2_would_sing would PRP_subj not
1 Q_dyn_would SNP_pl dyn_P_would_pl
1 dyn_P_would_pl would VP_pres , dyn_P2_would_pl
1 VP_pres VinfP
1 dyn_P2_would_pl would PRP_subj_pl not

#Zoot will eat the snake, will she not?
1 Q_dyn_will SNP dyn_P_will_sing
1 dyn_P_will_sing will VP_pres , dyn_P2_will_sing
1 VP_pres VinfP
1 dyn_P2_will_sing will PRP_subj not
1 Q_dyn_will SNP_pl dyn_P_will_pl
1 dyn_P_will_pl will VP_pres , dyn_P2_will_pl
1 VP_pres VinfP
1 dyn_P2_will_pl will PRP_subj_pl not
