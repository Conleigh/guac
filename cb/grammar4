# This grammar uses a convention that
#    - terminals are lowercase          (president)
#    - preterminals are capitalized     (Noun)
#    - other nonterminals are all-caps  (NP)
#
# This convention just makes grammars more readable to humans.  Thus:
#
#    - You should follow this convention unless you have a good reason
#      not to.
#
#    - But your *program* should still work with grammars that don't
#      follow this convention.  It should not pay any attention to
#      upper/lower case.  From your program's point of view,
#      if there is at least one rule for rewriting a symbol, then
#      that symbol is a nonterminal and should be rewritten.
#######################

# Rules for creating full sentences.
1 	START	ROOT
1	ROOT	S .
1	ROOT	S !
1 ROOT Q1 ?
1 ROOT Q2 ?
1 ROOT Q3 ?
.2 ROOT	is it true CC ?     # mixing terminals and nonterminals is ok.
.1 ROOT CC VPspecial .

# The basic grammar rules.  Here's what the abbreviations stand for:
#    S  = sentence
#    NP = noun phrase
#    VP = verb phrase
#    PP = prepositional phrase
#    Det = determiner (sometimes called "article")
#    Prep = preposition
#    Adj = adjective
#    CC = complement clause
#    Comp = complementizer
#    Verb = (by default) transitive verb
#    Verbi = intransitive verb
#    Verbc = verb that can precede a complementizer
#    VPspecial = special case verb phrase to handle "that s.t. happened perplexed s.t."
#        This class of verbs is bigger than "perplexed,"" but it is not all transitive verbs in reality, only in this example.
#    Verbinf = infinitive verb-transitive, e.g., "think"
#    Verbinfi = infinitive verb-intransitive
#    Wh = WH-word question words
#    Where = where; own category due to special behavior
#    Mod = modal verb (note: 'did' is not properly a modal verb, but it behaves the same way in these examples)

1 S NP VP
.2 S NP VP Conj NP VP
1 VP VP PP
1	VP Verb NP
1	VP Verbi
.3 VP Verbc CC
.1 VP VP conj VP
1 VPspecial Verb NP
2	NP Det Noun
.2 NP NP PP
.2 NP NP conj NP
.3 NP Noun
1	PP Prep NP
2	Noun Adj Noun
1 CC Comp S
.1 Verb Verb conj Verb

# Question grammar
1 Q1 Mod NP qVP
1 Q2 Where Q1
1 qVP Verbinf NP
1 qVP Verbinfi
1 qVP Verbinfc CC
1 Q3 Wh VP
1 Q3 Wh Mod S3
1 S3 NP Verbinf
1 S3 NP Verbinf NP Prep
1 S3 NP Verbinfi Prep
1 S3 NP Verbinfc Comp NP Verb
1 S3 NP Verbinfc Comp NP Verb Prep


# Vocabulary.  Your program can see that "ate" is a terminal
# symbol because there exists no rule for rewriting it.
# Any symbol that can rewrite as a terminal (or a string of
# terminals, like "chief of staff") is called a "preterminal."  Notice
# that a preterminal is a special kind of nonterminal.

# transitive verbs
1	Verb	ate
1	Verb	wanted
1	Verb	kissed
1	Verb	understood
1	Verb	pickled
1 Verb  perplexed

# intransitive verbs
1 Verbi worked
1 Verbi sighed
1 Verbi kissed

# verbs that can precede a complementizer
1 Verbc thought
1 Verbc understood

# infinitive verbs - transitive
1 Verbinf eat
1 Verbinf want
1 Verbinf kiss
1 Verbinf perplex
1 Verbinf understand

# infinitive verbs - intransitive
1 Verbinfi work
1 Verbinfi sigh
1 Verbinfi kiss
1 Verbinfi think

# infinitive verbs that can precede a complementizer
1 Verbinfc think
1 Verbinfc understand

# WH-word question words
1 Wh who
1 Wh what

# Where
1 Where where

# modal verbs
1 Mod did
1 Mod will

1 Det	the
1	Det	a
1	Det	every

1	Noun president
1	Noun sandwich
1	Noun pickle
1	Noun chief of staff
1	Noun floor
1 Noun Sally
1 Noun proposal
1 Noun desk

1	Adj	fine
1	Adj	delicious
1	Adj	perplexed
1	Adj	pickled
1 Adj very

1	Prep	with
1	Prep	on
1	Prep	under
1	Prep	in

#complementizers
1 Comp that

#coordinating conjunctions, sentence-level
1 Conj and
1 Conj but

#coordinating conjunctions, NP/VP-level
1 conj and
